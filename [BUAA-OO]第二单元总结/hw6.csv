Complexity metrics,÷‹»’, 14 4‘¬ 2024 15:28:31 CST
Method,CogC,ev(G),iv(G),v(G)
"Elevator.Elevator(int, RequestTable, RequestTable)",1,1,2,2
Elevator.open(),13,4,10,10
Elevator.reset(),10,5,5,5
Elevator.run(),17,3,7,10
"InputHandler.InputHandler(RequestTable, HashMap<Integer, RequestTable>, ArrayList<Elevator>)",0,1,1,1
InputHandler.run(),9,3,5,6
Main.main(String[]),3,1,4,4
"Person.Person(int, int, int)",0,1,1,1
Person.getElevatorId(),0,1,1,1
Person.getFromFloor(),0,1,1,1
Person.getId(),0,1,1,1
Person.getToFloor(),0,1,1,1
Person.setElevatorId(int),0,1,1,1
RequestTable.RequestTable(),1,1,2,2
RequestTable.addRequest(Person),0,1,1,1
RequestTable.addRequestTable(RequestTable),3,1,3,3
RequestTable.addReset(Reset),0,1,1,1
RequestTable.addResetNum(),0,1,1,1
RequestTable.clear(int),1,1,2,2
"RequestTable.delRequest(int, int)",0,1,1,1
RequestTable.getOneRequest(),8,3,7,7
RequestTable.getRequestMap(),0,1,1,1
RequestTable.getReset(int),0,1,1,1
RequestTable.isEmpty(),0,1,1,1
RequestTable.isEnd(),0,1,1,1
RequestTable.isResetEmpty(),0,1,1,1
RequestTable.isReseting(),0,1,1,1
RequestTable.setEndFlag(),0,1,1,1
RequestTable.setResetFlag(Boolean),0,1,1,1
RequestTable.subResetNum(),0,1,1,1
RequestTable.waitRequest(),0,1,1,1
"Reset.Reset(int, int, double)",0,1,1,1
Reset.getCapacity(),0,1,1,1
Reset.getElevatorId(),0,1,1,1
Reset.getSpeed(),0,1,1,1
Schedule.Choose(Person),2,2,2,2
"Schedule.Schedule(RequestTable, HashMap<Integer, RequestTable>, ArrayList<Elevator>)",1,1,2,2
Schedule.isWaitEmpty(),3,3,2,3
Schedule.run(),22,5,12,13
Strategy.Strategy(RequestTable),0,1,1,1
"Strategy.canOpenForIn(int, int, int, int)",11,4,7,8
"Strategy.canOpenForOut(int, HashMap<Integer, ArrayList<Person>>)",2,2,1,2
Strategy.canReset(int),1,2,1,2
"Strategy.getAdvice(int, int, int, int, HashMap<Integer, ArrayList<Person>>, int)",22,7,5,8
"Strategy.requestForOriginDir(int, int)",7,3,3,7
"TestMain.Pair.Pair(K, V)",0,1,1,1
TestMain.Pair.equals(Object),4,3,3,5
TestMain.Pair.getFirst(),0,1,1,1
TestMain.Pair.getSecond(),0,1,1,1
TestMain.Pair.hashCode(),0,1,1,1
TestMain.Pair.toString(),0,1,1,1
TestMain.TimeInputStream.TimeInputStream(ArrayList<String>),4,3,3,3
TestMain.TimeInputStream.read(),7,3,3,5
"TestMain.TimeInputStream.read(byte[], int, int)",10,8,2,10
TestMain.main(String[]),1,1,2,2

Class,OCavg,OCmax,WMC
Advice,n/a,n/a,0
Elevator,5.50,9,22
InputHandler,3.00,5,6
Main,4.00,4,4
Person,1.00,1,6
RequestTable,1.44,5,26
Reset,1.00,1,4
Schedule,4.00,9,16
Strategy,3.17,7,19
TestMain,2.00,2,2
TestMain.Pair,1.33,3,8
TestMain.TimeInputStream,5.00,8,15

Package,v(G)avg,v(G)tot
,2.80,154

Module,v(G)avg,v(G)tot
hw6,2.80,154

Project,v(G)avg,v(G)tot
project,2.80,154

